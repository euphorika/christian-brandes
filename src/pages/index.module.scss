@import '../scss/variables';
@import '../scss/breakpoints';

figure {
  display: block;
  margin: 0;
}

.sticky {
  margin: auto;
  width: calc(100% - 80px);
}

.posts {

  &.sticky {
    .row {
      width: 100%;
      margin: 0;
      padding: 0;
      display: block;

      .col {
        padding-top: 0;
        padding-bottom: 0;
      }
    }
  }

  .row {
    display: flex;
    justify-content: space-between;
    text-transform: uppercase;
    padding: $rowPadding / 2 0;

    @include breakpoint('m') {
      padding-left: $rowPadding * 0.7;
      padding-right: $rowPadding * 0.7;
      margin-left: -$spaceBetween + $minPagePadding;
      margin-right: -$spaceBetween + $minPagePadding;
    }

    @include breakpoint('l') {
      padding-left: $rowPadding;
      padding-right: $rowPadding;
    }

    position: relative;

    h1, h2, p {
      font-size: 12px;
      margin: 0;
    }

    img {
      max-width: 100%;
    }

    .col {
      padding: 0 $spaceBetween / 3;

      @include breakpoint('m') {
        padding-left: $spaceBetween * 0.7;
        padding-right: $spaceBetween * 0.7;
      }

      @include breakpoint('l') {
        padding-left: $spaceBetween;
        padding-right: $spaceBetween;
      }

      flex: 1;
    }


    &:nth-child(odd) {
      justify-content: flex-end;

      .col {
        @for $i from 2 through $maxCols {
          &:nth-last-child(#{$i}) {
            padding-top: ($i - 1) * $stepMargin;
          }
        }
      }
    }

    &:nth-child(even) {
      justify-content: flex-start;

      .col {
        @for $i from 2 through $maxCols {
          &:nth-child(#{$i}) {
            padding-top: ($i - 1) * $stepMargin;
          }
        }
      }
    }

  }
}
